CREATE OR REPLACE PACKAGE PKG_REC_AFL_SIT IS

    PROCEDURE P_GET_AFIL_RECUPERAR( P_CURSOR OUT GLOBALPKG.RCT1,
                                                pCORREOS   IN VARCHAR2,
                                                pIDSOCIOS IN VARCHAR2,
                                                pFECHA_INI IN VARCHAR2,
                                                pFECHA_FIN IN VARCHAR2);

END PKG_REC_AFL_SIT;

create OR REPLACE PACKAGE BODY PKG_REC_AFL_SIT IS
---------------------------------------------------------------------------------------------
-- FUNCIONES Y PROCEDIMIENTOS PARA APLICACION DE RECUPERACION DE AFILIACIONES LANDING
---------------------------------------------------------------------------------------------
    PROCEDURE P_GET_AFIL_RECUPERAR( P_CURSOR OUT GLOBALPKG.RCT1,
                                                pCORREOS   IN VARCHAR2,
                                                pIDSOCIOS IN VARCHAR2,
                                                pFECHA_INI IN VARCHAR2,
                                                pFECHA_FIN IN VARCHAR2) IS
        V_SQL       VARCHAR2(10000) := ' ';
        F_RFN_CRR    VARCHAR2(10000) := ' ';
        F_FCH  VARCHAR2(10000) := ' ';
    BEGIN
        IF pCORREOS IS NOT NULL AND pIDSOCIOS IS NOT NULL THEN
            F_RFN_CRR := ' AND ( EMAIL IN ('||pCORREOS||') OR IDSOCIO IN ('||pIDSOCIOS||') ) ';
        ELSIF pCORREOS IS NOT NULL THEN
            F_RFN_CRR := ' AND EMAIL IN ('||pCORREOS||') ';
        ELSIF pIDSOCIOS IS NOT NULL THEN
            F_RFN_CRR := ' AND IDSOCIO IN ('||pIDSOCIOS||') ';
        END IF;

        IF pFECHA_INI IS NOT NULL AND pFECHA_FIN IS NOT NULL THEN
            F_FCH := ' AND (TRUNC(FALTA) >= TO_DATE ('''||pFECHA_INI||''',''DD/MM/RRRR HH24:MI:SS'')
                            AND TRUNC(FALTA) <= TO_DATE('''||pFECHA_FIN||''',''DD/MM/RRRR'')) ';
        ELSIF pFECHA_INI IS NOT NULL THEN
            F_FCH := ' AND TRUNC(FALTA) >= TO_DATE('''||pFECHA_INI||''',''DD/MM/RRRR'') ';
        ELSIF pFECHA_FIN IS NOT NULL THEN
            F_FCH := ' AND TRUNC(FALTA) <= TO_DATE('''||pFECHA_FIN||''',''DD/MM/RRRR'') ';
        END IF;

        V_SQL := 'WITH AF AS (SELECT ROW_NUMBER() OVER (PARTITION BY TRIM(SO_NOM_STR),TRIM(SO_APAT_STR),TRIM(SO_AMAT_STR),SO.SO_FNAC_DT,SO_TEL4_STR,SO.SO_EMAIL_STR ORDER BY SO.SO_FALTA_DT) ID,
            SO.SO_ID_STR IDSOCIO,TRIM(SO_NOM_STR) SONOMBRE,TRIM(SO_APAT_STR) APELLIDOPATERNO,TRIM(SO_AMAT_STR) APELLIDOMATERNO,SO.SO_EMAIL_STR EMAIL,
            SO_TEL4_STR TELEFONO,SO.TI_CVE_N CVETIENDA,SO_CALLE_STR CALLE,SO_NUM_STR NOEXTERIOR,SO_NUMINT_STR NOINTERIOR,so.so_tipo_str,
            SO_COL_STR COLONIA,MU_CVE_N MUNICIPIO,SO_MUNIC_STR MUNICIPIODESC,SO.ED_CVE_N ESTADO,EDO.EDO_DESC_STR ESTADODESC,SO_CD_STR CIUDAD,
            SO_CP_STR CP,SO_REF_STR REFERENCIA,'''' ENTRECALLES,SO_FALTA_DT FALTA,'''' ARTICULOS
            FROM PS_SOCIOS@LRCORPPRICE SO
            LEFT JOIN PS_EDO@LRCORPPRICE EDO ON (EDO.ED_CVE_N = SO.ED_CVE_N AND EDO.PA_CVE_N = SO.PA_CVE_N)
            LEFT JOIN AFILIA_BITACORA_DIGITAL BD ON (BD.SO_ID_STR = SO.SO_ID_STR OR BD.SO_EMAIL_STR = SO.SO_EMAIL_STR)
            WHERE SO.SO_SEXO_STR IS NULL AND SO.TI_CVE_N = 29 AND BD.ABD_CVE_N IS NULL )
            SELECT A.*,PD.PT_NUM_N PEDIDO,PD.PT_IMPORTE_N IMPORTETOTAL,PD.PT_IMPORTE_N-PD.PT_COSENV_N IMPORTEPEDIDO,PD.PT_COSENV_N IMPORTEENVIO,
            PD.PT_DESC_N DESCUENTO,0 SEGUROENVIO,2 FORMADEPAGO, '''' ARTICULOS,2 TIPOVENTA,1 METODOPAGO,PD.PT_EST_STR FROM AF A
            LEFT JOIN UDONLINE.PS_PEDTMK@lrcorpprice PD ON (PD.SO_ID_STR = A.IDSOCIO AND A.CVETIENDA = PD.TI_CVE_N AND PD.PT_TIP_STR = ''F'')
            WHERE A.ID = 1 AND PD.PT_NUM_N IS NOT NULL AND PD.PT_EST_STR != ''C'''||F_RFN_CRR||F_FCH;

        OPEN P_CURSOR FOR V_SQL;
    END;
-----------------------------------------------------------------
END;
/

